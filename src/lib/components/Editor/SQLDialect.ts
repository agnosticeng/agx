import { SQLDialect } from '@codemirror/lang-sql';

const keywords = [
  'after',
  'alias',
  'all',
  'alter',
  'and',
  'anti',
  'any',
  'array',
  'as',
  'asc',
  'ascending',
  'asof',
  'ast',
  'async',
  'attach',
  'between',
  'both',
  'by',
  'case',

  'cast',
  'check',
  'clear',
  'cluster',
  'codec',
  'collate',
  'column',
  'comment',
  'constraint',
  'create',
  'cross',
  'cube',
  'current',
  'database',

  'databases',
  'date',
  'deduplicate',
  'default',
  'delay',
  'delete',
  'describe',
  'desc',
  'descending',
  'detach',
  'dictionaries',
  'dictionary',
  'disk',

  'distinct',
  'distributed',
  'drop',
  'else',
  'end',
  'engine',
  'events',
  'exists',
  'explain',
  'expression',
  'extract',
  'fetches',
  'final',
  'first',

  'flush',
  'for',
  'following',
  'for',
  'format',
  'freeze',
  'from',
  'full',
  'function',
  'global',
  'granularity',
  'group',
  'having',
  'hierarchical',
  'id',

  'if',
  'ilike',
  'in',
  'index',
  'injective',
  'inner',
  // 'insert',
  'interval',
  'into',
  'is',
  'is_object_id',
  'join',
  'json_false',
  'json_true',
  'key',

  'kill',
  'last',
  'layout',
  'leading',
  'left',
  'lifetime',
  'like',
  'limit',
  'live',
  'local',
  'logs',
  'materialize',
  'materialized',
  'max',
  'merges',

  'min',
  'modify',
  'move',
  'mutation',
  'no',
  'not',
  'nulls',
  'offset',
  'on',
  'optimize',
  'or',
  'order',
  'outer',
  'outfile',
  'over',
  'partition',

  'populate',
  'preceding',
  'prewhere',
  'primary',
  'range',
  'reload',
  'remove',
  'rename',
  'replace',
  'replica',
  'replicated',
  'right',
  'rollup',
  'row',

  'rows',
  'sample',
  'select',
  'semi',
  'sends',
  // 'set',
  'settings',
  'show',
  'source',
  'start',
  'stop',
  'substring',
  'sync',
  'syntax',
  'system',
  'table',

  'tables',
  'temporary',
  'test',
  'then',
  'ties',
  'timeout',
  // 'timestamp',
  'totals',
  'trailing',
  'trim',
  'truncate',
  'to',
  'top',
  'ttl',
  'type',

  'unbounded',
  'union',
  // 'update',
  'use',
  'using',
  'uuid',
  'values',
  'view',
  'volume',
  'watch',
  'when',
  'where',
  'window',
  'with',
  'string_agg'
];

const functions = [
  // Arithmetic Functions
  'plus',
  'minus',
  'multiply',
  'divide',
  'intDiv',
  'intDivOrZero',
  'modulo',
  'moduloOrZero',
  'positive_modulo',
  'negate',
  'abs',
  'gcd',
  'lcm',
  'max2',
  'min2',

  // Array Functions
  'empty',
  'notEmpty',
  'length',
  'emptyArrayUInt8',
  'emptyArrayUInt16',
  'emptyArrayUInt32',
  'emptyArrayUInt64',
  'emptyArrayInt8',
  'emptyArrayInt16',
  'emptyArrayInt32',
  'emptyArrayInt64',
  'emptyArrayFloat32',
  'emptyArrayFloat64',
  'emptyArrayDate',
  'emptyArrayDateTime',
  'emptyArrayString',
  'emptyArrayToSingle',
  'range',
  'array',
  'arrayWithConstant',
  'arrayConcat',
  'arrayElement',
  'has',
  'hasAll',
  'hasAny',
  'hasSubstr',
  'indexOf',
  'arrayCount',
  'countEqual',
  'arrayEnumerate',
  'arrayEnumerateUniq',
  'arrayPopBack',
  'arrayPopFront',
  'arrayPushBack',
  'arrayPushFront',
  'arrayResize',
  'arraySlice',
  'arraySort',
  'arrayReverseSort',
  'arrayUniq',
  'arrayJoin',
  'arrayDifference',
  'arrayDistinct',
  'arrayEnumerateDense',
  'arrayIntersect',
  'arrayReduce',
  'arrayReduceInRanges',
  'arrayReverse',
  'reverse',
  'arrayFlatten',
  'arrayCompact',
  'arrayZip',
  'arrayAUC',
  'arrayMap',
  'arrayFilter',
  'arrayFill',
  'arrayReverseFill',
  'arraySplit',
  'arrayReverseSplit',
  'arrayExists',
  'arrayAll',
  'arrayFirst',
  'arrayLast',
  'arrayFirstIndex',
  'arrayLastIndex',
  'arrayMin',
  'arrayMax',
  'arraySum',
  'arrayAvg',
  'arrayCumSum',
  'arrayCumSumNonNegative',
  'arrayProduct',

  // Map functions
  'mapKeys',

  // Comparison Functions
  'equals',
  'notEquals',
  'less',
  'greater',
  'lessOrEquals',
  'greaterOrEquals',

  // Logical Functions
  'and',
  'or',
  'not',
  'xor',

  // Type Conversion Functions
  'toInt8',
  'toInt16',
  'toInt32',
  'toInt64',
  'toInt128',
  'toInt256',
  'toInt8OrZero',
  'toInt16OrZero',
  'toInt32OrZero',
  'toInt64OrZero',
  'toInt128OrZero',
  'toInt256OrZero',
  'toInt8OrNull',
  'toInt16OrNull',
  'toInt32OrNull',
  'toInt64OrNull',
  'toInt128OrNull',
  'toInt256OrNull',
  'toInt8OrDefault',
  'toInt16OrDefault',
  'toInt32OrDefault',
  'toInt64OrDefault',
  'toInt128OrDefault',
  'toInt256OrDefault',
  'toUInt8',
  'toUInt16',
  'toUInt32',
  'toUInt64',
  'toUInt128',
  'toUInt256',
  'toUInt8OrZero',
  'toUInt16OrZero',
  'toUInt32OrZero',
  'toUInt64OrZero',
  'toUInt128OrZero',
  'toUInt256OrZero',
  'toUInt8OrNull',
  'toUInt16OrNull',
  'toUInt32OrNull',
  'toUInt64OrNull',
  'toUInt128OrNull',
  'toUInt256OrNull',
  'toUInt8OrDefault',
  'toUInt16OrDefault',
  'toUInt32OrDefault',
  'toUInt64OrDefault',
  'toUInt128OrDefault',
  'toUInt256OrDefault',
  'toFloat32',
  'toFloat32OrZero',
  'toFloat32OrNull',
  'toFloat32OrDefault',
  'toFloat64',
  'toFloat64OrZero',
  'toFloat64OrNull',
  'toFloat64OrDefault',
  'toDate',
  'toDateOrZero',
  'toDateOrNull',
  'toDateOrDefault',
  'toDateTime',
  'toDateTimeOrZero',
  'toDateTimeOrNull',
  'toDateTimeOrDefault',
  'toDate32',
  'toDate32OrZero',
  'toDate32OrNull',
  'toDate32OrDefault',
  'toDateTime64',
  'toDecimal32',
  'toDecimal64',
  'toDecimal128',
  'toDecimal256',
  'toDecimal32OrNull',
  'toDecimal64OrNull',
  'toDecimal128OrNull',
  'toDecimal256OrNull',
  'toDecimal32OrDefault',
  'toDecimal64OrDefault',
  'toDecimal128OrDefault',
  'toDecimal256OrDefault',
  'toDecimal32OrZero',
  'toDecimal64OrZero',
  'toDecimal128OrZero',
  'toDecimal256OrZero',
  'toString',
  'toFixedString',
  'toStringCutToZero',
  'reinterpretAsUInt8',
  'reinterpretAsUInt16',
  'reinterpretAsUInt32',
  'reinterpretAsUInt64',
  'reinterpretAsInt8',
  'reinterpretAsInt16',
  'reinterpretAsInt32',
  'reinterpretAsInt64',
  'reinterpretAsFloat32',
  'reinterpretAsFloat64',
  'reinterpretAsDate',
  'reinterpretAsDateTime',
  'reinterpretAsString',
  'reinterpretAsFixedString',
  'reinterpretAsUUID',
  'reinterpret',
  'accurateCast',
  'accurateCastOrNull',
  'accurateCastOrDefault',
  'toIntervalYear',
  'toIntervalQuarter',
  'toIntervalMonth',
  'toIntervalWeek',
  'toIntervalDay',
  'toIntervalHour',
  'toIntervalMinute',
  'toIntervalSecond',
  'parseDateTimeBestEffort',
  'parseDateTime32BestEffort',
  'parseDateTimeBestEffortUS',
  'parseDateTimeBestEffortOrNull',
  'parseDateTime32BestEffortOrNull',
  'parseDateTimeBestEffortOrZero',
  'parseDateTime32BestEffortOrZero',
  'parseDateTimeBestEffortUSOrNull',
  'parseDateTimeBestEffortUSOrZero',
  'parseDateTime64BestEffort',
  'parseDateTime64BestEffortUS',
  'parseDateTime64BestEffortOrNull',
  'parseDateTime64BestEffortOrZero',
  'parseDateTime64BestEffortUSOrNull',
  'parseDateTime64BestEffortUSOrZero',
  'toLowCardinality',
  'toUnixTimestamp64Milli',
  'toUnixTimestamp64Micro',
  'toUnixTimestamp64Nano',
  'fromUnixTimestamp64Milli',
  'fromUnixTimestamp64Micro',
  'fromUnixTimestamp64Nano',
  'formatRow',
  'formatRowNoNewline',
  'snowflakeToDateTime',
  'snowflakeToDateTime64',
  'dateTimeToSnowflake',
  'dateTime64ToSnowflake',

  // Functions for Working with Dates and Times
  // "timeZone",
  'toTimeZone',
  'timeZoneOf',
  'timeZoneOffset',
  'toYear',
  'toQuarter',
  'toMonth',
  'toDayOfYear',
  'toDayOfMonth',
  'toDayOfWeek',
  'toHour',
  'toMinute',
  'toSecond',
  'toUnixTimestamp',
  'toStartOfYear',
  'toStartOfISOYear',
  'toStartOfQuarter',
  'toStartOfMonth',
  'toMonday',
  'toStartOfWeek',
  'toStartOfDay',
  'toStartOfHour',
  'toStartOfMinute',
  'toStartOfSecond',
  'toStartOfFiveMinutes',
  'toStartOfTenMinutes',
  'toStartOfFifteenMinutes',
  'toStartOfInterval',
  'toTime',
  'toRelativeYearNum',
  'toRelativeQuarterNum',
  'toRelativeMonthNum',
  'toRelativeWeekNum',
  'toRelativeDayNum',
  'toRelativeHourNum',
  'toRelativeMinuteNum',
  'toRelativeSecondNum',
  'toISOYear',
  'toISOWeek',
  'toWeek',
  'toYearWeek',
  'date_trunc',
  'DATE_TRUNC',
  'date_add',
  'date_diff',
  'date_sub',
  'timestamp_add',
  'timestamp_sub',
  'now',
  'nowInBlock',
  'today',
  'yesterday',
  'timeSlot',
  'toYYYYMM',
  'toYYYYMMDD',
  'toYYYYMMDDhhmmss',
  'addYears',
  'addMonths',
  'addWeeks',
  'addDays',
  'addHours',
  'addMinutes',
  'addSeconds',
  'addQuarters',
  'subtractYears',
  'subtractMonths',
  'subtractWeeks',
  'subtractDays',
  'subtractHours',
  'subtractMinutes',
  'subtractSeconds',
  'subtractQuarters',
  'timeSlots',
  'formatDateTime',
  'dateName',
  'monthName',
  'FROM_UNIXTIME',
  'toModifiedJulianDay',
  'toModifiedJulianDayOrNull',
  'fromModifiedJulianDay',
  'fromModifiedJulianDayOrNull',

  // Functions for Working with Strings
  'empty',
  'notEmpty',
  'length',
  'lengthUTF8',
  'char_length',
  'CHAR_LENGTH',
  'character_length',
  'CHARACTER_LENGTH',
  'leftPad',
  'leftPadUTF8',
  'rightPad',
  'rightPadUTF8',
  'lower',
  'lcase',
  'upper',
  'ucase',
  'lowerUTF8',
  'upperUTF8',
  'isValidUTF8',
  'toValidUTF8',
  'repeat',
  'reverse',
  'reverseUTF8',
  'format',
  'concat',
  'concatAssumeInjective',
  'substring',
  'mid',
  'substr',
  'substringUTF8',
  'appendTrailingCharIfAbsent',
  'convertCharset',
  'base58Encode',
  'base58Decode',
  'tryBase58Decode',
  'base64Encode',
  'base64Decode',
  'tryBase64Decode',
  'endsWith',
  'startsWith',
  'trim',
  'trimLeft',
  'trimRight',
  'trimBoth',
  'CRC32',
  'CRC32IEEE',
  'CRC64',
  'normalizeQuery',
  'normalizedQueryHash',
  'normalizeUTF8NFC',
  'normalizeUTF8NFD',
  'normalizeUTF8NFKC',
  'normalizeUTF8NFKD',
  'encodeXMLComponent',
  'decodeXMLComponent',
  'extractTextFromHTML',
  'ascii',

  // Functions for Searching in Strings
  'position',
  'locate',
  'positionCaseInsensitive',
  'positionUTF8',
  'positionCaseInsensitiveUTF8',
  'multiSearchAllPositions',
  'multiSearchAllPositionsUTF8',
  'multiSearchFirstPosition',
  'multiSearchFirstIndex',
  'multiSearchAny',
  'match',
  'multiMatchAny',
  'multiMatchAnyIndex',
  'multiMatchAllIndices',
  'multiFuzzyMatchAny',
  'multiFuzzyMatchAnyIndex',
  'multiFuzzyMatchAllIndices',
  'extract',
  'extractAll',
  'extractAllGroupsHorizontal',
  'extractAllGroupsVertical',
  'like',
  'notLike',
  'ilike',
  'ngramDistance',
  'ngramSearch',
  'countSubstrings',
  'countSubstringsCaseInsensitive',
  'countSubstringsCaseInsensitiveUTF8',
  'countMatches',

  // Functions for Searching and Replacing in Strings
  'replaceOne',
  'replaceAll',
  'replace',
  'replaceRegexpOne',
  'replaceRegexpAll',
  'regexpQuoteMeta',
  'translate',
  'translateUTF8',

  // Conditional Functions
  'if',
  'multiIf',

  // Mathematical Functions
  'e',
  'pi',
  'exp',
  'log',
  'ln',
  'exp2',
  'log2',
  'exp10',
  'log10',
  'sqrt',
  'cbrt',
  'erf',
  'erfc',
  'lgamma',
  'tgamma',
  'sin',
  'cos',
  'tan',
  'asin',
  'acos',
  'atan',
  'pow',
  'power',
  'intExp2',
  'intExp10',
  'cosh',
  'acosh',
  'sinh',
  'asinh',
  'atanh',
  'atan2',
  'hypot',
  'log1p',
  'sign',
  'degrees',
  'radians',
  'factorial',

  // Rounding Functions
  'floor',
  'ceil',
  'trunc',
  'round',
  'roundBankers',
  'roundToExp2',
  'roundDuration',
  'roundAge',
  'roundDown',

  // Functions for Splitting and Merging Strings and Arrays
  'splitByChar',
  'splitByString',
  'splitByRegexp',
  'splitByWhitespace',
  'splitByNonAlpha',
  'arrayStringConcat',
  'alphaTokens',
  'extractAllGroups',
  'ngrams',
  'tokens',

  // Bit Functions
  'bitAnd',
  'bitOr',
  'bitXor',
  'bitNot',
  'bitShiftLeft',
  'bitShiftRight',
  'bitRotateLeft',
  'bitRotateRight',
  'bitSlice',
  'bitTest',
  'bitTestAll',
  'bitTestAny',
  'bitCount',
  'bitHammingDistance',

  // Bitmap Functions
  'bitmapBuild',
  'bitmapToArray',
  'bitmapSubsetInRange',
  'bitmapSubsetLimit',
  'subBitmap',
  'bitmapContains',
  'bitmapHasAny',
  'bitmapHasAll',
  'bitmapCardinality',
  'bitmapMin',
  'bitmapMax',
  'bitmapTransform',
  'bitmapAnd',
  'bitmapOr',
  'bitmapXor',
  'bitmapAndnot',
  'bitmapAndCardinality',
  'bitmapOrCardinality',
  'bitmapXorCardinality',
  'bitmapAndnotCardinality',

  // Hash Functions
  'halfMD5',
  'MD4',
  'MD5',
  'sipHash64',
  'sipHash128',
  'cityHash64',
  'intHash32',
  'intHash64',
  'SHA1',
  'SHA224',
  'SHA256',
  'SHA512',
  'BLAKE3',
  'URLHash',
  'farmFingerprint64',
  'farmHash64',
  'javaHash',
  'javaHashUTF16LE',
  'hiveHash',
  'metroHash64',
  'jumpConsistentHash',
  'murmurHash2_32',
  'murmurHash2_64',
  'gccMurmurHash',
  'murmurHash3_32',
  'murmurHash3_64',
  'murmurHash3_128',
  'xxHash32',
  'xxHash64',
  'ngramSimHash',
  'ngramSimHashCaseInsensitive',
  'ngramSimHashUTF8',
  'ngramSimHashCaseInsensitiveUTF8',
  'wordShingleSimHash',
  'wordShingleSimHashCaseInsensitive',
  'wordShingleSimHashUTF8',
  'wordShingleSimHashCaseInsensitiveUTF8',
  'ngramMinHash',
  'ngramMinHashCaseInsensitive',
  'ngramMinHashUTF8',
  'ngramMinHashCaseInsensitiveUTF8',
  'ngramMinHashArg',
  'ngramMinHashArgCaseInsensitive',
  'ngramMinHashArgUTF8',
  'ngramMinHashArgCaseInsensitiveUTF8',
  'wordShingleMinHash',
  'wordShingleMinHashCaseInsensitive',
  'wordShingleMinHashUTF8',
  'wordShingleMinHashCaseInsensitiveUTF8',
  'wordShingleMinHashArg',
  'wordShingleMinHashArgCaseInsensitive',
  'wordShingleMinHashArgUTF8',
  'wordShingleMinHashArgCaseInsensitiveUTF8',

  // Functions for Generating Pseudo-Random Numbers
  'rand',
  'rand32',
  'rand64',
  'randCanonical',
  'randConstant',
  'randomString',
  'randomFixedString',
  'randomPrintableASCII',
  'randomStringUTF8',
  'fuzzBits',

  // Encoding Functions
  'char',
  'hex',
  'unhex',
  'bin',
  'unbin',
  'bitmaskToList',
  'bitmaskToArray',
  'bitPositionsToArray',

  // Functions for Working with UUID
  'generateUUIDv4',
  'empty',
  'notEmpty',
  'toUUID',
  'toUUIDOrNull',
  'toUUIDOrZero',
  'UUIDStringToNum',
  'UUIDNumToString',
  'serverUUID',

  // Functions for Working with URLs
  'protocol',
  'domain',
  'domainWithoutWWW',
  'topLevelDomain',
  'firstSignificantSubdomain',
  'cutToFirstSignificantSubdomain',
  'cutToFirstSignificantSubdomainWithWWW',
  'cutToFirstSignificantSubdomainCustom',
  'cutToFirstSignificantSubdomainCustomWithWWW',
  'firstSignificantSubdomainCustom',
  'port',
  'path',
  'pathFull',
  'queryString',
  'fragment',
  'queryStringAndFragment',
  'extractURLParameter',
  'extractURLParameters',
  'extractURLParameterNames',
  'URLHierarchy',
  'URLPathHierarchy',
  'encodeURLComponent',
  'decodeURLComponent',
  'encodeURLFormComponent',
  'decodeURLFormComponent',
  'netloc',
  'cutWWW',
  'cutQueryString',
  'cutFragment',
  'cutQueryStringAndFragment',
  'cutURLParameter',

  // Functions for Working with IPv4 and IPv6 Addresses
  'IPv4NumToString',
  'IPv4StringToNum',
  'IPv4StringToNumOrDefault',
  'IPv4StringToNumOrNull',
  'IPv4NumToStringClassC',
  'IPv6NumToString',
  'IPv6StringToNum',
  'IPv6StringToNumOrDefault',
  'IPv6StringToNumOrNull',
  'IPv4ToIPv6',
  'cutIPv6',
  'IPv4CIDRToRange',
  'IPv6CIDRToRange',
  'toIPv4',
  'toIPv4OrDefault',
  'toIPv4OrNull',
  'toIPv6',
  'IPv6StringToNumOrDefault',
  'IPv6StringToNumOrNull',
  'isIPv4String',
  'isIPv6String',
  'isIPAddressInRange',

  // Functions for Working with JSON
  // Functions for Working with Dictionaries
  // Functions for Working with Embedded Dictionaries

  // Functions for Implementing the IN Operator
  'in',
  'notIn',
  // "globalIn",
  // "globalNotIn",

  // Geo Functions
  // Functions for Working with Nullable Values
  'isNull',
  'ISNULL',
  'isNotNull',
  'coalesce',
  'ifNull',
  'nullIf',
  'assumeNotNull',
  'toNullable',

  // Functions for Working with Tuples
  'tuple',
  'tupleElement',
  'untuple',
  'tupleHammingDistance',
  'tupleToNameValuePairs',
  'tuplePlus',
  'tupleMinus',
  'tupleMultiply',
  'tupleDivide',
  'tupleNegate',
  'tupleMultiplyByNumber',
  'tupleDivideByNumber',
  'dotProduct',

  // Other Functions
  'formatReadableSize',
  'formatReadableQuantity',
  'formatReadableTimeDelta',

  // Aggregate Functions
  // TODO: add combinator variants (https://clickhouse.com/docs/en/sql-reference/aggregate-functions/combinators)
  'count',
  'COUNT',
  'countIf',
  'min',
  'MIN',
  'minIf',
  'max',
  'MAX',
  'sum',
  'SUM',
  'avg',
  'AVG',
  'any',
  'ANY',
  'stddevPop',
  'stddevSamp',
  'varPop',
  'varSamp',
  'covarPop',
  'covarSamp',
  'anyHeavy',
  'anyLast',
  'argMin',
  'argMax',
  'avgWeighted',
  'topK',
  'topKWeighted',
  'groupArray',
  'groupUniqArray',
  'groupArrayInsertAt',
  'groupArrayMovingAvg',
  'groupArrayMovingSum',
  'groupBitAnd',
  'groupBitOr',
  'groupBitXor',
  'groupBitmap',
  'groupBitmapAnd',
  'groupBitmapOr',
  'groupBitmapXor',
  'sumWithOverflow',
  'sumMap',
  'minMap',
  'maxMap',
  'skewSamp',
  'skewPop',
  'kurtSamp',
  'kurtPop',
  'uniq',
  'uniqExact',
  'uniqCombined',
  'uniqCombined64',
  'uniqHLL12',
  'quantile',
  'quantiles',
  'quantileExact',
  'quantileExactLow',
  'quantileExactHigh',
  'quantileExactWeighted',
  'quantileTiming',
  'quantileTimingWeighted',
  'quantileDeterministic',
  'quantileTDigest',
  'quantileTDigestWeighted',
  'quantileBFloat16',
  'quantileBFloat16Weighted',
  'simpleLinearRegression',
  'stochasticLinearRegression',
  'stochasticLogisticRegression',
  'categoricalInformationValue',

  // Table Functions
  'numbers',

  // window functions
  'rank',
  'dense_rank',
  'row_number',
  'lag',
  'lead',
  'lagInFrame',
  'leadInFrame',

  // Agnostic functions
  // 'token_name',
  // 'token_symbol',
  // 'token_decimals',
  // 'token_unit_amount',
  // 'token_usd_amount',
  // 'token_usd_amount_or_default',
  // 'token_usd_amount_or_null'
];

const builtin = [
  'date',
  'first',
  'id',
  'key',
  'identifier',

  'epoch',
  'second',
  'minute',
  'hour',
  'day',
  'week',
  'month',
  'quarter',
  'year'
];

export const ProxyDialect = SQLDialect.define({
  charSetCasts: true,
  doubleDollarQuotedStrings: true,
  operatorChars: '+-*/<>=~!@#%^&|`?',
  specialVar: '',
  keywords: Array.from(new Set([...keywords, ...functions])).join(' '),
  builtin: builtin.join(' '),
  types: ''
});
